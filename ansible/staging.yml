---

- name: Oration Staging Server
  hosts: all
  vars_files:
    - node/packages.yml
  roles:
    - geerlingguy.nodejs
  become: true
  tasks:

    - name: Apt | Update and Upgrade
      apt:
        upgrade: yes
        update_cache: yes
        cache_valid_time: 86400

    - name: Apt | Install
      apt:
        name: "{{ item }}"
        state: latest
      with_items:
        - apt-transport-https
        - build-essential
        - pkg-config
        - libssl-dev
        - curl
        - git
        - nginx
        - vim
        - sqlite3
        - libsqlite3-dev

    - name: Rust | Checking if installed
      stat:
        path: ~/.cargo/bin/cargo
      become: false
      register: is_rust

    - name: Rust | Get Installer
      get_url:
        url: https://sh.rustup.rs
        dest: /tmp/rustup.sh
        mode: "+x"
      when: is_rust == False

    - name: Rust | Install
      command: /tmp/rustup.sh -y --default-toolchain=nightly
      become: false
      when: is_rust == False

    - name: Diesel | Checking if installed
      stat:
        path: ~/.cargo/bin/diesel
      become: false
      register: is_diesel

    - name: Diesel | Install
      command: ~/.cargo/bin/cargo install diesel_cli --no-default-features --features sqlite
      become: false
      when: is_diesel == False

    - name: Build | Backend (Update)
      command: ~/.cargo/bin/cargo update
      become: false
      args:
        chdir: /vagrant
    
    - name: Build | Backend
      command: ~/.cargo/bin/cargo build
      become: false
      args:
        chdir: /vagrant

    - name: Elm | Install Packages
      command: /usr/local/lib/npm/bin/elm-package install -y
      become: false
      args:
        chdir: /vagrant/app/elm

    - name: Build | Frontend
      command: /usr/local/lib/npm/bin/brunch build
      become: false
      args:
        chdir: /vagrant/app

    - name: nginx | Deploy nginx.conf
      copy:
        src: config/nginx.conf
        dest: /etc/nginx/nginx.conf

    - name: nginx | Delete default vhost
      file:
        path: /etc/nginx/sites-enabled/default
        state: absent

    - name: nginx | Deploy vhost config
      copy:
        src: config/nginx.vhost.conf
        dest: /etc/nginx/sites-available/oration.conf

    - name: nginx | Enable vhost
      file:
        src: /etc/nginx/sites-available/oration.conf
        dest: /etc/nginx/sites-enabled/000-oration
        state: link

    - name: nginx | Chmod logfile
      file:
        path: /var/log/nginx
        mode: "a+rx"
        state: directory
        recurse: true

    - name: nginx | Restart service daemon
      service:
        name: nginx
        state: restarted
        enabled: yes

